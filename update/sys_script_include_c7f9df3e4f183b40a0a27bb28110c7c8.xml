<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_67546_crusher.CrusherUtilAjax</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>CrusherUtilAjax</name>
        <script><![CDATA[var CrusherUtilAjax = Class.create();
CrusherUtilAjax.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {

	getCustomerData : function(){
		var custSysId = this.getParameter('sysparm_custSysId');
		var from_date_str = this.getParameter('sysparm_from_date');
		var to_date_str = this.getParameter('sysparm_to_date');
		var from_date = new GlideDateTime(from_date_str);
		var to_date = new GlideDateTime(to_date_str);
		gs.info("vamshi: "+custSysId); //dateBETWEENjavascript:gs.dateGenerate('2019-06-01','start')@javascript:gs.dateGenerate('2019-06-23','end')
		var item_types = this.getAvailableSalesTypeforCustomer(custSysId,from_date,to_date);
		gs.info("vamshi item_types: "+item_types.join(','));
		var custSales = this.getSalesByType(custSysId,item_types,from_date,to_date);
		gs.info("vamshi cust sales: "+JSON.stringify(custSales));
		var payments = this.getPaymentsofCustomer(custSysId,from_date,to_date);
		var custDets = this.getCustomerDetails(custSysId);
		var salesDets = this.getSales(custSysId,from_date,to_date);
		var paymentsDets = this.getPayments(custSysId,from_date,to_date);

		return JSON.stringify(custSales)+"<split>"+JSON.stringify(payments)+"<split>"+JSON.stringify(custDets)+"<split>"+JSON.stringify(salesDets)+"<split>"+JSON.stringify(paymentsDets);

		//return JSON.stringify(custSales)+"<split>"+JSON.stringify(payments)+"<split>"+JSON.stringify(custDets);
	},
	getCustomerDetails : function(custSysId){
		var obj={cust_name:'',email_id:'',mobile:'',company:'',address:''};
		var grc = new GlideRecord('x_67546_crusher_customer');
		if(grc.get(custSysId)){

			obj.cust_name = grc.name+'';
			obj.email_id = grc.email_id+'';
			obj.mobile = grc.mobile_number+'';
			obj.company = grc.company.company_name+'';
			obj.address = grc.company.address+'';
		}
		return obj;
	},
	getAvailableSalesTypeforCustomer : function(custSysId,from_date,to_date){
		gs.info("vamshi getAvailableSalesTypeforCustomer: "+custSysId);
		var types = [];
		var grs = new GlideRecord('x_67546_crusher_sales');
		grs.addQuery('customer_name',custSysId);
		if(from_date!='' && to_date!='')
			grs.addEncodedQuery("dateBETWEENjavascript:gs.dateGenerate('"+from_date+"','start')@javascript:gs.dateGenerate('"+to_date+"','end')");
		grs.orderBy('item_type');
		grs.query();
		while(grs.next()){
			types.push(grs.item_type+'');
		}
		gs.info("vamshi getAvailableSalesTypeforCustomer: "+types.join(','));
		var arrayUtil = new global.ArrayUtil();
		return arrayUtil.unique(types);
	},
	getSalesByType : function(custSysId,item_types,from_date,to_date){
		var fields = ['quantity','number_of_trips','bill_amount','transport_charge','batha','total_bill'];
		gs.info("vamshi getSalesByType: "+custSysId+"::"+item_types);
		var result = [];
		for(var i=0; i<item_types.length; i++){
			var obj = {};
			obj.item_type = this.getItemTypeName(item_types[i]);
			for(var j=0;j<fields.length;j++){
				obj[fields[j]] = this.getAggregateofGivenFromSales(item_types[i],custSysId,fields[j],from_date,to_date);
				gs.info("vamshi obj[fields[j]]: "+obj[fields[j]]);
			}
			result.push(obj);
		}
		gs.info("vamshi result: "+JSON.stringify(result));
		return result;
	},
	getItemTypeName : function(item_type_sys_id){
		var gri = new GlideRecord('x_67546_crusher_item_types');
		if(gri.get(item_type_sys_id)){
			return gri.name+'';
		}
		return '';
	},
	getAggregateofGivenFromSales : function(item_type,custSysId,field,from_date,to_date){
		var tot = 0;
		gs.info("vamshi getAggregateofGivenFromSales: "+item_type+"::"+custSysId+"::"+field);
		var gra = new GlideAggregate('x_67546_crusher_sales');
		gra.addQuery('item_type',item_type);
		gra.addQuery('customer_name',custSysId);
		if(from_date!='' && to_date!='')
			gra.addEncodedQuery("dateBETWEENjavascript:gs.dateGenerate('"+from_date+"','start')@javascript:gs.dateGenerate('"+to_date+"','end')");
		gra.groupBy('item_type');
		gra.addAggregate('SUM',field);
		gra.query();
		while(gra.next()){
			tot = gra.getAggregate('SUM',field); 
		}
		gs.info("vamshi tot: "+tot);
		return tot;

	},
	getPaymentsofCustomer : function(custSysId,from_date,to_date){
		var res = [];
		var total = 0;
		var grp = new GlideAggregate('x_67546_crusher_customer_payments');
		grp.addQuery('customer',custSysId);
		if(from_date!='' && to_date!='')
			grp.addEncodedQuery("dateBETWEENjavascript:gs.dateGenerate('"+from_date+"','start')@javascript:gs.dateGenerate('"+to_date+"','end')");
		grp.addAggregate('SUM','amount');
		grp.groupBy('mode_of_payment');
		grp.query();
		while(grp.next()){
			var obj = {};
			obj.mode_of_payment = grp.mode_of_payment+'';
			obj.amt = grp.getAggregate('SUM','amount');
			total += parseFloat(grp.getAggregate('SUM','amount'));
			res.push(obj);
		}
		res.push({'mode_of_payment':'Total amount','amt':total});

		return res;
	},

	getSales : function(custSysId,from_date,to_date){
		gs.info("vamshi crusher inside getSales");
		var sales = [];
		var grs = new GlideRecord('x_67546_crusher_sales');
		grs.addQuery('customer_name',custSysId);
		if(from_date!='' && to_date!='')
			grs.addEncodedQuery("dateBETWEENjavascript:gs.dateGenerate('"+from_date+"','start')@javascript:gs.dateGenerate('"+to_date+"','end')");
		grs.orderByDesc('date');
		grs.query();
		while(grs.next()){
			var obj = {};
			obj.biil_number = grs.bill_number+'';
			obj.date = grs.date+'';
			obj.vehicle_number = grs.vehicle_number+'';
			obj.transportation_by = grs.transportation_by.name+'';
			obj.location = grs.location+'';
			obj.item_type = grs.item_type.name+'';
			obj.quantity = grs.quantity+'';
			obj.quantity_type = grs.qty_type+'';
			obj.no_of_trips = grs.number_of_trips+'';
			obj.cost_per_cft_kg = grs.cost_per_cft_kg+'';
			obj.bill_amt = grs.bill_amount+'';
			obj.transportation_charge = grs.transport_charge+'';
			obj.batha = grs.batha+'';
			obj.total_bill = grs.total_bill+'';
			sales.push(obj);
		}
		//gs.info("vamshi crusher inside getSales sales: "+JSON.stringify(sales));
		return sales;
	},
	getPayments : function(custSysId,from_date,to_date){
		gs.info("vamshi crusher inside getPayments");
		var payments = [];
		var grp = new GlideRecord('x_67546_crusher_customer_payments');
		grp.addQuery('customer',custSysId);
		if(from_date!='' && to_date!='')
			grp.addEncodedQuery("dateBETWEENjavascript:gs.dateGenerate('"+from_date+"','start')@javascript:gs.dateGenerate('"+to_date+"','end')");
		grp.orderByDesc('date');
		grp.query();
		while(grp.next()){
			var obj = {};
			obj.number = grp.number+'';
			obj.date = grp.date+'';
			obj.mode_of_payment = grp.mode_of_payment+'';
			obj.amount = grp.amount+'';
			payments.push(obj);
		}
		//gs.info("vamshi crusher inside getSales payments: "+JSON.stringify(payments));
		return payments;
	},

	getSalesObjOfGivenDateRange : function(fromDate,toDate){
		gs.info("vamshi sales from date: "+fromDate+" todate: "+toDate);
		var objSales = {};
		var gr = new GlideAggregate('x_67546_crusher_sales');
		gr.addEncodedQuery("dateBETWEENjavascript:gs.dateGenerate('"+fromDate+"','start')@javascript:gs.dateGenerate('"+toDate+"','end')");
		gr.groupBy('customer_name');
		gr.addAggregate('SUM','total_without_batha');
		gr.query();
		while(gr.next()){
			var sum = gr.getAggregate('SUM','total_without_batha');
			objSales[String(gr.customer_name)] = sum;
		}
		gs.info("vamshi sales1: "+JSON.stringify(objSales));
		return objSales;
	},
	getPaymentsObjOfGivenDateRange : function(fromDate,toDate){
		gs.info("vamshi payments from date: "+fromDate+" todate: "+toDate);
		var objPayments = {};
		var grp = new GlideAggregate('x_67546_crusher_customer_payments');
		grp.addEncodedQuery("dateBETWEENjavascript:gs.dateGenerate('"+fromDate+"','start')@javascript:gs.dateGenerate('"+toDate+"','end')");
		grp.groupBy('customer');
		grp.addAggregate('SUM','amount');
		grp.query();
		while(grp.next()){
			var sum = grp.getAggregate('SUM','amount');
			objPayments[grp.customer] = sum;
		}
		gs.info("vamshi payments1: "+JSON.stringify(objPayments));
		return objPayments;
	},
	getAllCustomerNames : function(){
		var objCust = {};
		var grc = new GlideRecord('x_67546_crusher_customer');
		grc.orderBy('name');
		grc.query();
		while(grc.next()){
			objCust[String(grc.sys_id)] = String(grc.name);
		}
		return objCust;
	},
	getAllCustomersData : function(){
		var finalData = [];
		var from_date = this.getParameter('sysparm_from_date');
		var to_date = this.getParameter('sysparm_to_date');
		gs.info("vamshi all from date: "+from_date+" todate: "+to_date);
		var customer = this.getAllCustomerNames();
		var sales = this.getSalesObjOfGivenDateRange(from_date,to_date);
		var payments = this.getPaymentsObjOfGivenDateRange(from_date,to_date);
		gs.info("vamshi sales: "+JSON.stringify(sales));
		gs.info("vamshi payments: "+JSON.stringify(payments));
		for(var key in customer){
			var finalObj = {};
			var totsales = sales.hasOwnProperty(key) ? sales[key] : 0;
			var totpayments = payments.hasOwnProperty(key) ? payments[key] : 0;
			finalObj.cust = key;
			finalObj.custName = customer[key];
			finalObj.sales = totsales;
			finalObj.payments = totpayments;
			finalObj.due = parseFloat(totsales) - parseFloat(totpayments);
			finalData.push(finalObj);
		}
		if(finalData.length > 0){
			return JSON.stringify(finalData);
		}
		return "";
	},
	
	getTravelObjectForPopup : function(){
		var sys_ids = this.getParameter('sysparm_sys_ids');
		var retArr = [];
		var gr = new GlideRecord('sysapproval_approver');
		//gr.addQuery('sys_id','IN',sys_ids);
		gr.addEncodedQuery('source_table=x_168180_travel_re_travel_request_application_table');
		gr.query();
		while(gr.next()){
			var obj = {};
			obj.approver = gr.approver.getDisplayValue().toString();
			obj.state = gr.state.getDisplayValue().toString();
			obj.sysapproval = gr.sysapproval.getDisplayValue().toString();
			obj.tot_amt = gr.sysapproval.total_cost.toString();
			obj.sys_id = gr.sys_id.toString();
			retArr.push(obj);
		}
		return new JSON().encode(retArr);
		//return sys_ids;
	},

	type: 'CrusherUtilAjax'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-03-24 05:58:51</sys_created_on>
        <sys_id>c7f9df3e4f183b40a0a27bb28110c7c8</sys_id>
        <sys_mod_count>42</sys_mod_count>
        <sys_name>CrusherUtilAjax</sys_name>
        <sys_package display_value="Crusher" source="x_67546_crusher">7ed3c03e4f5cf740a0a27bb28110c7a5</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Crusher">7ed3c03e4f5cf740a0a27bb28110c7a5</sys_scope>
        <sys_update_name>sys_script_include_c7f9df3e4f183b40a0a27bb28110c7c8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-07-11 15:15:31</sys_updated_on>
    </sys_script_include>
</record_update>
